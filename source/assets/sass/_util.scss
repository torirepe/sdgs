//break point
$breakpoints: (
  'sp': 'screen and (max-width: 425px)',
  'tb': 'screen and (min-width: 426px) and (max-width: 768px)',
  'pc': 'screen and (min-width: 769px)',
  'st': 'screen and (max-width: 768px)',
  'tp': 'screen and (min-width: 426px)',
) !default;
@mixin mq($breakpoint: sp) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

//font
$f-sans: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Original Yu Gothic", "Yu Gothic", YuGothic, Verdana, Meiryo, "M+ 1p", sans-serif;
$f-serif: "Hiragino Mincho ProN", 游明朝, "Yu Mincho", YuMincho, HGS明朝E, メイリオ, Meiryo, serif;
$f-ryumin: "a-otf-ryumin-pr6n", "Hiragino Mincho ProN", 游明朝, "Yu Mincho", YuMincho, HGS明朝E, メイリオ, Meiryo, serif;
$f-arno: "arno-pro", "Hiragino Mincho ProN", 游明朝, "Yu Mincho", YuMincho, HGS明朝E, メイリオ, Meiryo, serif;

//color
$c-white: #fff;
$c-black: #000;
$c-grey: #999;
$c-lightgrey: #eee;
$c-darkgrey: #555;
$c-blue: #000bc9;

//control
.sp {
  @include mq(tb) {
    display: none;
  }
  @include mq(pc) {
    display: none;
  }
}
.tb {
  @include mq(sp) {
    display: none;
  }
  @include mq(pc) {
    display: none;
  }
}
.pc {
  @include mq(sp) {
    display: none;
  }
  @include mq(tb) {
    display: none;
  }
}
.st {
  @include mq(pc) {
    display: none !important;
  }
}
.tp {
  @include mq(sp) {
    display: none !important;
  }
}
.cf {
  zoom: 1;
  &:after {
    display: block;
    content: "";
    clear: both;
  }
}
@mixin fz($px) {
  @include mq(sp) {
    font-size: $px / 640 * 100 + vw;
  }
  @include mq(tb) {
    font-size: $px + px;
  }
  @include mq(pc) {
    font-size: $px + px;
  }
}